{
  "name": "jsgui-lang-essentials",
  "version": "0.4.3",
  "main": "jsgui-lang-essentials.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/metabench/jsgui-lang-essentials"
  },
  "keywords": [
    "lang",
    "jsgui"
  ],
  "author": {
    "name": "James Vickers",
    "email": "james@metabench.com"
  },
  "description": "jsgui - Small and powerful utility module, used by other jsgui modules.",
  "dependencies": {
    "amdefine": ">=0.0.4"
  },
  "contributors": [
    {
      "name": "James Vickers",
      "email": "james@metabench.com"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "license": "MIT",
  "readme": "jsgui-lang-essentials\n=====================\n\n##Installation\n\tnpm install jsgui-lang-essentials\n\n###Class\nAllows programming in JavaScript using Class declarations. Easy access to the methods of the superclass, allows for inheritance and inheritance chains. Based on code written by John Resig.\n\n\tvar Class = jsgui.Class;\n\t\n\tvar Entity = Class.extend({\n\t\t'init': function(spec) {\n\t\t\tthis.name = spec.name;\n\t\t}\n\t});\n\t\n\tvar Person = Entity.extend({\n\t\t'init': function(spec) {\n\t\t\tthis._super(spec);\n\t\t\tthis.date_of_birth = spec.date_of_birth;\n\t\t}\n\t});\n\t\n\tvar Employee = Person.extend({\n\t\t'init': function(spec) {\n\t\t\tthis._super(spec);\n\t\t\tthis.salary = spec.salary;\n\t\t}\n\t});\n\t\n### each\nIterator for both objects and arrays. Iteration callback is in the jQuery style, with the callback providing (index, item) callbacks.\n\n\teach(obj_or_array_to_iterate, function(index, item_value) {\n\t\tconsole.log('index ' + index);\n\t\tconsole.log('item_value ' + item_value);\n\t});\n\t\n### extend\nA copy of jQuery's extend function\n\n### get_truth_map_from_arr\nCreates a map object from an array (of strings or items who's toString method can be used) where the keys correspond to strings in the array, and the values are all true\n\n### get_map_from_arr\nCreates a map object from an array (of strings or items who's toString method can be used) where the keys correspond to strings in the array, and the values are the original values in the array\n\n### arr_like_to_arr\nCreates an array from an array-like object, such as the arguments list available in functions through the variable 'arguments'\n\n### is_ctrl\nTests if an object is a jsgui Control\n\n### tof\nReturns the type of an object, as a string. Types returned are: null, undefined, object, array, control, function, string, number, boolean, regex, buffer, readable_stream, writable_stream.\n\n### atof\nReturns an array containing the types of all the items in array. This uses tof.\n\n### is_defined\nIs the object not undefined?\n\n### is_data_object\nIs the object a jsgui Data_Object?\n\n### is_collection\nIs the object a jsgui Collection?\n\n### stringify\nReturns a string represention of an object as JSON or with JSON-like encoding. This allows for a wider variety of objects to be efficiently encoded, eg representing arrays as root objects.\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/metabench/jsgui-lang-essentials/issues"
  },
  "homepage": "https://github.com/metabench/jsgui-lang-essentials",
  "_id": "jsgui-lang-essentials@0.4.3",
  "dist": {
    "shasum": "d98aeafccea1e2a461be65f8abbf8e8bd501e44a"
  },
  "_from": "jsgui-lang-essentials@0.4.x",
  "_resolved": "https://registry.npmjs.org/jsgui-lang-essentials/-/jsgui-lang-essentials-0.4.3.tgz"
}
